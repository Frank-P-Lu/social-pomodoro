/* See the Tailwind configuration guide for advanced usage
   https://tailwindcss.com/docs/configuration */

@import "tailwindcss" source(none);
@source "../css";
@source "../js";
@source "../../lib/social_pomodoro_web";

/* A Tailwind plugin that makes "hero-#{ICON}" classes available.
   The heroicons installation itself is managed by your mix.exs */
@plugin "../vendor/heroicons";

/* daisyUI Tailwind Plugin. You can update this file by fetching the latest version with:
   curl -sLO https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js
   Make sure to look at the daisyUI changelog: https://daisyui.com/docs/changelog/ */
@plugin "../vendor/daisyui" {
  themes: false;
}

/* daisyUI theme plugin. You can update this file by fetching the latest version with:
  curl -sLO https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js
  We ship with two themes, a light one inspired on Phoenix colors and a dark one inspired
  on Elixir colors. Build your own at: https://daisyui.com/theme-generator/ */
@plugin "../vendor/daisyui-theme" {
  name: "forest";
  default: true;
  prefersdark: true;
  color-scheme: "dark";
  --color-base-100: oklch(13% 0.028 261.692);
  --color-base-200: oklch(21% 0.034 264.665);
  --color-base-300: oklch(27% 0.033 256.848);
  --color-base-content: oklch(96% 0.003 264.542);
  --color-primary: oklch(76% 0.177 163.223);
  --color-primary-content: oklch(26% 0.051 172.552);
  --color-secondary: oklch(60% 0.126 221.723);
  --color-secondary-content: oklch(13.955% 0.027 168.327);
  --color-accent: oklch(70% 0.183 293.541);
  --color-accent-content: oklch(14.125% 0.023 185.713);
  --color-neutral: oklch(37% 0.034 259.733);
  --color-neutral-content: oklch(96% 0.003 264.542);
  --color-info: oklch(72.06% 0.191 231.6);
  --color-info-content: oklch(0% 0 0);
  --color-success: oklch(84% 0.238 128.85);
  --color-success-content: oklch(0% 0 0);
  --color-warning: oklch(84.71% 0.199 83.87);
  --color-warning-content: oklch(0% 0 0);
  --color-error: oklch(71.76% 0.221 22.18);
  --color-error-content: oklch(0% 0 0);
  --radius-selector: 1rem;
  --radius-field: 1rem;
  --radius-box: 1rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 0;
  --noise: 0;
}

@theme {
  --breakpoint-xs: 23.4375rem;
}

/* Add variants based on LiveView classes */
@custom-variant phx-click-loading (.phx-click-loading&, .phx-click-loading &);
@custom-variant phx-submit-loading (.phx-submit-loading&, .phx-submit-loading &);
@custom-variant phx-change-loading (.phx-change-loading&, .phx-change-loading &);

/* Use the data attribute for dark mode  */
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

/* Make LiveView wrapper divs transparent for layout */
[data-phx-session],
[data-phx-teleported-src] {
  display: contents
}

/* Shout message animations */
@layer components {
  @keyframes slide-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide-out {
    from {
      opacity: 1;
      transform: translateY(0);
    }

    to {
      opacity: 0;
      transform: translateY(-30px);
    }
  }
}

/* Participant card expanded/collapsed state */
@layer components {
  /* Width control based on expanded state */

  .participant-card[data-expanded="false"] {
    width: 6rem;
    aspect-ratio: 1 / 1;
  }

  .participant-card[data-expanded="true"] {
    width: 14rem;
    aspect-ratio: 4 / 5;
  }

  /* Desktop responsive styles */
  @media (min-width: 768px) {
    .participant-card[data-expanded="false"] {
      width: 7rem;
    }

    .participant-card[data-expanded="true"] {
      width: 16rem;
    }
  }

  /* Make the two main sections split 1:2 (top 1/3, bottom 2/3) when expanded */
  .participant-card[data-expanded="true"]>.card {
    flex: 1;
    min-height: 0;
  }

  .participant-card[data-expanded="true"]>div:last-child {
    flex: 2;
    min-height: 0;
  }

  /* Prevent cards from shrinking in flex containers and smooth transitions */
  .participant-card {
    flex-shrink: 0;
    transition: width 0.3s ease, aspect-ratio 0.3s ease;
  }

  /* Smooth content fade transitions */
  .participant-card .content-full,
  .participant-card .content-short {
    transition: opacity 0.2s ease;
  }

  .participant-card[data-expanded="false"] .content-full {
    opacity: 0;
  }

  .participant-card[data-expanded="true"] .content-short {
    opacity: 0;
  }

  /* 1. HIDE the full content when the card is CLOSED */
  /* The full content should be hidden by default */
  .participant-card[data-expanded="false"] .content-full {
    display: none !important;
  }

  /* 2. HIDE the short summary when the card is EXPANDED */
  /* The short summary is shown by default */
  .participant-card[data-expanded="true"] .content-short {
    display: none !important;
  }

  /* 3. SHOW the short summary when the card is CLOSED */
  /* Override the hidden class to show content-short elements */
  .participant-card[data-expanded="false"] .content-short {
    display: flex !important;
  }

  /* 4. Rotate chevron icon when collapsed (not expanded) */
  .participant-card[data-expanded="false"] .rotate-on-collapse {
    transform: rotate(180deg);
  }

  /* Smooth transitions */
  .participant-card .rotate-on-collapse {
    transition: transform 0.2s ease;
  }
}

/* iOS safe area background - extends navigation color into status bar */
@layer base {
  body {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
  
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: env(safe-area-inset-top);
    background-color: oklch(var(--color-base-200));
    z-index: 9999;
  }
}

/* This file is for your main application CSS */